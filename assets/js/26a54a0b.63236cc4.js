"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[59024],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=d(n),g=r,u=p["".concat(c,".").concat(g)]||p[g]||m[g]||s;return n?a.createElement(u,i(i({ref:t},l),{},{components:n})):a.createElement(u,i({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<s;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},88430:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return l},default:function(){return p}});var a=n(87462),r=n(63366),s=(n(67294),n(3905)),i=["components"],o={title:"Sending a chat message",description:"Send a chat message in a meeting.",slug:"sending-a-chat-message",tags:["web-core","chat"]},c="Sending a chat message",d={unversionedId:"Chat/sending-a-chat-message",id:"version-0.2/Chat/sending-a-chat-message",isDocsHomePage:!1,title:"Sending a chat message",description:"Send a chat message in a meeting.",source:"@site/react-native-core_versioned_docs/version-0.2/06-Chat/02-sending-a-chat-message.mdx",sourceDirName:"06-Chat",slug:"/Chat/sending-a-chat-message",permalink:"/react-native-core/Chat/sending-a-chat-message",editUrl:"https://github.com/dyte-in/docs/tree/main/react-native-core_versioned_docs/version-0.2/06-Chat/02-sending-a-chat-message.mdx",tags:[{label:"web-core",permalink:"/react-native-core/tags/web-core"},{label:"chat",permalink:"/react-native-core/tags/chat"}],version:"0.2",lastUpdatedBy:"Vaibhav Shinde",lastUpdatedAt:1656917641,formattedLastUpdatedAt:"7/4/2022",sidebarPosition:2,frontMatter:{title:"Sending a chat message",description:"Send a chat message in a meeting.",slug:"sending-a-chat-message",tags:["web-core","chat"]},sidebar:"version-0.2/mainSidebar",previous:{title:"Introducing chat",permalink:"/react-native-core/Chat/introduction"},next:{title:"Receiving chat messages",permalink:"/react-native-core/Chat/receiving-chat-messages"}},l=[{value:"Send a text message",id:"send-a-text-message",children:[]},{value:"Extra",id:"extra",children:[]}],m={toc:l};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sending-a-chat-message"},"Sending a chat message"),(0,s.kt)("p",null,"As mentioned in ",(0,s.kt)("a",{parentName:"p",href:"./introduction"},"introduction"),", there are 3 types of chat messages - text messages, images, and files. There is a method in ",(0,s.kt)("inlineCode",{parentName:"p"},"meeting.chat")," to send a message of each type."),(0,s.kt)("h2",{id:"send-a-text-message"},"Send a text message"),(0,s.kt)("p",null,"To send a text message, the ",(0,s.kt)("inlineCode",{parentName:"p"},"meeting.chat.sendTextMessage()")," method can be used. This accepts a string ",(0,s.kt)("inlineCode",{parentName:"p"},"message")," and sends it to the room."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const message = 'Is this the real life?';\nawait meeting.chat.sendTextMessage(message);\n")),(0,s.kt)("h2",{id:"extra"},"Extra"),(0,s.kt)("p",null,"There is also a common method called ",(0,s.kt)("inlineCode",{parentName:"p"},"meeting.chat.sendMessage()")," that can be used to send any of the 3 types of messages displayed above. It essentially calls one of the methods from above depending upon the type of payload you send to the method. The ",(0,s.kt)("inlineCode",{parentName:"p"},"sendMessage()")," method accepts a parameter ",(0,s.kt)("inlineCode",{parentName:"p"},"message")," of the following type:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"async function sendMessage(\n    message: { type: 'text', message: string }\n        | { type: 'image', image: File }\n        | { type: 'file', file: File },\n) {...}\n")),(0,s.kt)("p",null,"Here's how you would use the ",(0,s.kt)("inlineCode",{parentName:"p"},"sendMessage()")," method to send a text message."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const message = 'Is this just fantasy?';\nawait meeting.chat.sendMessage({ type: 'text', message });\n")))}p.isMDXComponent=!0}}]);