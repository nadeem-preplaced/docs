"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[25881],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=i.createContext({}),s=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=s(t),d=a,m=g["".concat(u,".").concat(d)]||g[d]||p[d]||r;return t?i.createElement(m,l(l({ref:n},c),{},{components:t})):i.createElement(m,l({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=g;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=t[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3966:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return g}});var i=t(87462),a=t(63366),r=(t(67294),t(3905)),l=["components"],o={title:"Functions to disable plugins",description:"Methods on a plugin in a meeting.",slug:"disable-plugins",tags:["web-core","plugins"]},u="Functions to disable plugins",s={unversionedId:"Plugins/disable-plugin",id:"version-0.2/Plugins/disable-plugin",isDocsHomePage:!1,title:"Functions to disable plugins",description:"Methods on a plugin in a meeting.",source:"@site/react-native-core_versioned_docs/version-0.2/08-Plugins/03-disable-plugin.mdx",sourceDirName:"08-Plugins",slug:"/Plugins/disable-plugins",permalink:"/react-native-core/Plugins/disable-plugins",editUrl:"https://github.com/dyte-in/docs/tree/main/react-native-core_versioned_docs/version-0.2/08-Plugins/03-disable-plugin.mdx",tags:[{label:"web-core",permalink:"/react-native-core/tags/web-core"},{label:"plugins",permalink:"/react-native-core/tags/plugins"}],version:"0.2",lastUpdatedBy:"Vaibhav Shinde",lastUpdatedAt:1655983999,formattedLastUpdatedAt:"6/23/2022",sidebarPosition:3,frontMatter:{title:"Functions to disable plugins",description:"Methods on a plugin in a meeting.",slug:"disable-plugins",tags:["web-core","plugins"]},sidebar:"version-0.2/mainSidebar",previous:{title:"Functions to enable plugins",permalink:"/react-native-core/Plugins/enable-plugin"},next:{title:"DyteClient",permalink:"/react-native-core/Reference/DyteClient"}},c=[{value:"Remove Plugin View",id:"remove-plugin-view",children:[]},{value:"Deactivate Plugins",id:"deactivate-plugins",children:[]},{value:"Disable Plugins",id:"disable-plugins",children:[]}],p={toc:c};function g(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"functions-to-disable-plugins"},"Functions to disable plugins"),(0,r.kt)("p",null,"Each plugin in ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.plugins")," object is of type ",(0,r.kt)("a",{parentName:"p",href:"./introduction"},(0,r.kt)("inlineCode",{parentName:"a"},"DytePlugin"))," and exposes the following functions to disable plugins."),(0,r.kt)("h2",{id:"remove-plugin-view"},"Remove Plugin View"),(0,r.kt)("p",null,"This method is used for cleaning up event listeners attached to an iframe. It must be used before the iframe is removed from the DOM."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const plugins = meeting.plugins.all.toArray();\n\nplugins.forEach(async (plugin: DytePlugin) => {\n    await plugin.removePluginView();\n})\n")),(0,r.kt)("h2",{id:"deactivate-plugins"},"Deactivate Plugins"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"deactivate()")," method deactivates the plugin for all users in the meeting. When you deactivate a plugin, it gets removed from the active plugins map and can only be accessed from ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.plugins.all"),"."),(0,r.kt)("p",null,"The snippet below displays all active plugins and deactivate a plugin on click."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const plugins = meeting.plugins.active.toArray();\n\nplugins.forEach((plugin: DytePlugin) => {\n  const button = document.createElement('button');\n  button.innerText = `Deactivate ${plugin.name}`;\n  button.onclick = async () => {\n    await plugin.deactivate();\n  }\n  document.body.appendChild(button);\n})\n")),(0,r.kt)("p",null,"Here is another way you can deactivate a plugin."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const plugins = meeting.plugins.active.toArray();\nconst plugin = plugins.find((p) => p.name === "YouTube");\n\nawait plugin?.deactivate();\n')),(0,r.kt)("h2",{id:"disable-plugins"},"Disable Plugins"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"disable()")," method deactivates the plugin for the current user. This does not affect other users in the meeting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const plugins = meeting.plugins.active.toArray();\nconst plugin = plugins.find((p) => p.name === "YouTube");\n\nawait plugin?.disable();\n')))}g.isMDXComponent=!0}}]);