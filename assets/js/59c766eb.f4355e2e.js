"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[89013],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=i,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return a?n.createElement(h,p(p({ref:t},s),{},{components:a})):n.createElement(h,p({ref:t},s))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,p=new Array(r);p[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,p[1]=o;for(var c=2;c<r;c++)p[c]=a[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},97559:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var n=a(87462),i=a(63366),r=(a(67294),a(3905)),p=["components"],o={title:"Participants",description:"Events, methods and data pertaining to meeting participants.",slug:"participants",tags:["web-core","participants","participant"]},l="Participants",c={unversionedId:"Participants/participants",id:"version-0.27.x/Participants/participants",isDocsHomePage:!1,title:"Participants",description:"Events, methods and data pertaining to meeting participants.",source:"@site/web-core_versioned_docs/version-0.27.x/05-Participants/01-participants.mdx",sourceDirName:"05-Participants",slug:"/Participants/participants",permalink:"/web-core/Participants/participants",editUrl:"https://github.com/dyte-in/docs/tree/main/web-core_versioned_docs/version-0.27.x/05-Participants/01-participants.mdx",tags:[{label:"web-core",permalink:"/web-core/tags/web-core"},{label:"participants",permalink:"/web-core/tags/participants"},{label:"participant",permalink:"/web-core/tags/participant"}],version:"0.27.x",lastUpdatedBy:"Rohan Mukherjee",lastUpdatedAt:1656319568,formattedLastUpdatedAt:"6/27/2022",sidebarPosition:1,frontMatter:{title:"Participants",description:"Events, methods and data pertaining to meeting participants.",slug:"participants",tags:["web-core","participants","participant"]},sidebar:"version-0.27.x/mainSidebar",previous:{title:"Room Metadata",permalink:"/web-core/room-metadata"},next:{title:"The participant object",permalink:"/web-core/Participants/participants/participant"}},s=[{value:"Set participant view mode",id:"set-participant-view-mode",children:[]},{value:"Set page number in paginated mode",id:"set-page-number-in-paginated-mode",children:[]},{value:"Host control methods",id:"host-control-methods",children:[]}],d={toc:s};function m(e){var t=e.components,a=(0,i.Z)(e,p);return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"participants"},"Participants"),(0,r.kt)("p",null,"The data regarding all meeting participants is stored under ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.participants"),". This ",(0,r.kt)("strong",{parentName:"p"},"does not")," include the local user. Use the methods and events to consume the participants data.\nFor example, to get all the participants who joined the meeting:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// get all joined participants\nconst joinedParticipants = meeting.participants.joined;\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.participants")," object has the following properties."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"joined"),": A map that contains all the participants who have joined the meeting except the local user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waitlisted"),": A map that contains all the participants waiting to join the meeting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"active"),": A map that contains all the participants except the local user who are supposed to be on the screen at the moment "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pinned"),": A map that contains all the pinned participants of the meeting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"count"),": The number of participants who are joined in the meeting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pageCount"),": Number of pages available in paginated mode. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"maxActiveParticipantsCount"),": The maximum number of participants that can be present in the active state.")),(0,r.kt)("p",null,"Therefore, if you were to make a grid of participants, you'd use the ",(0,r.kt)("inlineCode",{parentName:"p"},"active")," map, but to display all participants in the meeting you'd use the ",(0,r.kt)("inlineCode",{parentName:"p"},"joined")," map."),(0,r.kt)("p",null,"Each participant in each of the ",(0,r.kt)("inlineCode",{parentName:"p"},"joined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"waitlisted"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"active"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"pinned")," maps is of type ",(0,r.kt)("a",{parentName:"p",href:"../../Reference/DyteParticipant"},(0,r.kt)("inlineCode",{parentName:"a"},"DyteParticipant")),". Read more about each individual ",(0,r.kt)("inlineCode",{parentName:"p"},"participant")," object ",(0,r.kt)("a",{parentName:"p",href:"../participant-object"},"here"),"."),(0,r.kt)("p",null,"Each of these maps are of type ",(0,r.kt)("a",{parentName:"p",href:"../../Reference/DyteParticipantMap"},(0,r.kt)("inlineCode",{parentName:"a"},"DyteParticipantMap")),", and therefore emit a ",(0,r.kt)("inlineCode",{parentName:"p"},"participantJoined")," event when a participant is added to the map, and a ",(0,r.kt)("inlineCode",{parentName:"p"},"participantLeft")," event when a participant leaves the map. For instance, to listen for when a participant gets pinned in the meeting, you can use the following snippet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"meeting.participants.pinned.on('participantJoined', (participant) => {\n    console.log(`Participant ${participant.name} got pinned`);\n});\n")),(0,r.kt)("h2",{id:"set-participant-view-mode"},"Set participant view mode"),(0,r.kt)("p",null,"The view mode indicates whether the participants are populated in ",(0,r.kt)("inlineCode",{parentName:"p"},"ACTIVE_GRID")," mode or ",(0,r.kt)("inlineCode",{parentName:"p"},"PAGINATED")," mode. In ",(0,r.kt)("inlineCode",{parentName:"p"},"ACTIVE_GRID")," mode, the partcipants are automatically replaced in ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.participants.active"),", based on who is speaking or who has their video turned on."),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"PAGINATED")," mode, the participants in ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.participants.active")," will be fixed. Only when you call the ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.participants.setPage(pageNumber)")," method, it will replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"active")," participants with a different set of participants."),(0,r.kt)("p",null,"You can change the participant view between ",(0,r.kt)("inlineCode",{parentName:"p"},"ACTIVE_GRID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PAGINATED")," mode using the following method. This will trigger ",(0,r.kt)("inlineCode",{parentName:"p"},"viewModeChanged")," event as a side affect."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// set the view mode to paginated\nawait meeting.participants.setViewMode('PAGINATED');\n\n// set the view mode to active grid\nawait meeting.participants.setViewMode('ACTIVE_GRID');\n")),(0,r.kt)("h2",{id:"set-page-number-in-paginated-mode"},"Set page number in paginated mode"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"setPage()")," method allows you to switch between pages of participants present in the meeting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// switch to second page\nawait meeting.participants.setPage(2);\n")),(0,r.kt)("h2",{id:"host-control-methods"},"Host control methods"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting.participants")," object has host control methods that allow you to disable the audio and video streams of other users in the meeting (given that the user preset has the right permissions)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// mute all participants\nawait meeting.participants.disableAllAudio();\n\n// disable video for all participants\nawait meeting.participants.disableAllVideo();\n")),(0,r.kt)("p",null,"To remove all participants from a meeting, you can call the ",(0,r.kt)("inlineCode",{parentName:"p"},"kickAll()")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// remove all participants from the meeting\nawait meeting.participants.kickAll();\n")))}m.isMDXComponent=!0}}]);