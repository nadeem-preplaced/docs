"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[92102],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),h=p(n),g=r,m=h["".concat(c,".").concat(g)]||h[g]||u[g]||i;return n?a.createElement(m,s(s({ref:t},l),{},{components:n})):a.createElement(m,s({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},20370:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return h}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),s=["components"],o={title:"Other chat functions",description:"Other functionality associated with chat.",slug:"other-chat-functions",tags:["web-core","chat"]},c="Other chat functions",p={unversionedId:"Chat/other-chat-functions",id:"version-0.2/Chat/other-chat-functions",isDocsHomePage:!1,title:"Other chat functions",description:"Other functionality associated with chat.",source:"@site/react-native-core_versioned_docs/version-0.2/06-Chat/04-other-chat-functions.mdx",sourceDirName:"06-Chat",slug:"/Chat/other-chat-functions",permalink:"/react-native-core/Chat/other-chat-functions",editUrl:"https://github.com/dyte-in/docs/tree/main/react-native-core_versioned_docs/version-0.2/06-Chat/04-other-chat-functions.mdx",tags:[{label:"web-core",permalink:"/react-native-core/tags/web-core"},{label:"chat",permalink:"/react-native-core/tags/chat"}],version:"0.2",lastUpdatedBy:"Vaibhav Shinde",lastUpdatedAt:1656917641,formattedLastUpdatedAt:"7/4/2022",sidebarPosition:4,frontMatter:{title:"Other chat functions",description:"Other functionality associated with chat.",slug:"other-chat-functions",tags:["web-core","chat"]},sidebar:"version-0.2/mainSidebar",previous:{title:"Receiving chat messages",permalink:"/react-native-core/Chat/receiving-chat-messages"},next:{title:"Introduction",permalink:"/react-native-core/Polls/introduction"}},l=[{value:"Get messages by a user",id:"get-messages-by-a-user",children:[]},{value:"Get messages of a particular type",id:"get-messages-of-a-particular-type",children:[]},{value:"Pinning a chat message",id:"pinning-a-chat-message",children:[]}],u={toc:l};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"other-chat-functions"},"Other chat functions"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.chat")," object exposes certain other methods for convenience when working with chat."),(0,i.kt)("h2",{id:"get-messages-by-a-user"},"Get messages by a user"),(0,i.kt)("p",null,"You can get messages by a particular user by passing the user's ID to the ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.chat.getMessagesByUser()")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// Find the userId of the user with name \"Freddie\".\nconst { userId } = meeting.participants.joined.toArray().find((p) => p.name === 'Freddie');\n\nconst messages = meeting.chat.getMessagesByUser(userId);\n")),(0,i.kt)("h2",{id:"get-messages-of-a-particular-type"},"Get messages of a particular type"),(0,i.kt)("p",null,"You can also get messages of a particular type using the ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.chat.getMessagesByType()")," method. For example, you can get all image messages present in the chat using the following snippet."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const imageMessages = meeting.chat.getMessagesByType('image');\n")),(0,i.kt)("h2",{id:"pinning-a-chat-message"},"Pinning a chat message"),(0,i.kt)("p",null,"You can ",(0,i.kt)("inlineCode",{parentName:"p"},"pin")," a number of messages to the chat. When you pin a message, the message object will have the attribute ",(0,i.kt)("inlineCode",{parentName:"p"},"pinned: true"),", using which you can identify if a message is pinned."),(0,i.kt)("p",null,"To pin a message, run the following snippet."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// Let's say we want to pin the first message in the chat (could be a text, image, or file).\nconst { id } = meeting.chat.messages[0];\n\nawait meeting.chat.pin(id);\n")),(0,i.kt)("p",null,"Once you pin a message, it will be added to ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.chat.pinned"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const { id } = meeting.chat.messages[0];\n\nawait meeting.chat.pin(id);\n\nconsole.log(meeting.chat.pinned);\nconsole.log(meeting.chat.pinned.length > 0); // Should be true\n")),(0,i.kt)("p",null,"You can also unpin a pinned message, by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.chat.unpin()")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// Unpin the first pinned message.\n\nconst { id } = meeting.chat.pinned[0];\nawait meeting.chat.unpin(id);\n")))}h.isMDXComponent=!0}}]);